#These labels are usually written to log files (not in the UI of the app)

#NOTE: encoding of this file is determined in zk.xml file

#Errors
app.notoperable=Application not in operable state, please fix configuration issues before proceeding

app.conf_file_not_readable=Cannot read configuration file {}

app.conf_file_not_parsable=Error parsing configuration file.

app.gluu_version_guessed=Gluu Server version inferred was {}

app.gluu_version_not_guessable=Cannot determine Gluu Server version. Error ({})

app.err_init_ldapmanager=Error initializing ldapEntryManager. Error ({})

app.webapp_init_failure= === WEBAPP INITIALIZATION FAILED ===

app.wrong_branding_path=Filesystem directory {} for custom branding is wrong. Using default theme

app.inexistent_ox-ldap=ox-ldap_location does not point to a real file

app.appliance_orgid_missing=Appliance Inum and Organization Inum must be provided

app.wrong_ldap_settings=Wrong LDAP settings provided.

app.ldap_authn_unsupported=LDAP authentication is not supported with current settings

app.missing_acr_value=Your Gluu server is missing one or more critical acr values: {0}

app.retry_retrieve_acr=Could not retrieve the list of acrs supported by this server: {0}

app.wrong_log_level=Log level {} supplied is not valid. Defaulting to {}

app.no_oxd_config=No oxd configuration was provided

app.error_authorization_step=An error occurred during authorization step

app.oxd_settings_missing=Host, port, and URI for redirect must be present in configuration file

app.conf_update_error=Error in attempt to update configuration file

app.otp_settings_error=Error parsing or checking consistency of OTP settings. Please check LDAP entry of OTP custom script

app.sms_settings_error=Error parsing SMS settings. Please check LDAP entry of SMS custom script

app.sg_settings_error=Error parsing super Gluu Settings. Please check LDAP entry of Super Gluu script

app.script_lookup_error=There were {0} custom scripts matching acr {1}

app.user_no_claims=Cannot retrieve claims for logged user

#Hints

app.current_log_level=Using {} for log level

app.set_log_level=Using log level {}

app.metadata_guessed=Metadata for {} not found. Value inferred={}

app.obtaining_acrs=Obtaining "acr_values_supported" from server {}

app.pass_reset_turnedoff=Pass reset set automatically to false. Check if you are using a backend LDAP

app.otp_settings=OTP settings found were: {}

app.sms_settings=SMS settings found were: {}

app.u2f_settings=U2f settings found were: {}

app.sg_settings=Super Gluu settings found were: {}

app.webapp_init_ok= === WEBAPP INITIALIZED SUCCESSFULLY ===

app.effective_acrs=Effective list of enabled authentication methods is: {}, total: {}!

app.dynamic_registration_disabled=Dynamic registration of OpenId Connect clients must be enabled in the server. Check expiration time is greater than zero

app.updating_oxd_settings=Setting oxd configs (host: {}, port: {}, https extension: {}, post logout: {})

app.updated_oxd_settings=oxd client registered successfully, oxd-id={}

app.oxd_settings_error=Setting oxd-server configs failed.

app.refresh_clients_warn=Users will not be able to login until a new sucessful attempt to refresh oxd-associated clients takes place. Restart the app to trigger the update immediately

app.landed_home_from=Attempt to access home page from URL={}

app.authz_codes=Authorization code={}, Access token={}, Id token {}

app.fail_read_credentials=Cannot read user credentials

app.credentials_total=Number of credentials for user {}: {}

app.user_offset=Time offset for session is {}

app.mincreds_defaulted=Using default value {} for minimum number of credentials to enable strong authentication

app.mincreds_2FA_notinbounds=Value for min_creds_2FA={} not in interval [{},{}]. Defaulting to {}

#u2f
app.no_fido_branch=Non existing fido branch for {}, creating...
app.start_registration_request_start=Beginning registration start with uid={}, app_id={}
app.start_registration_request_result=Finished registration start with response: {}
app.start_registration_request_error=Registration failed with error: {}
app.finish_registration_response=Response of finish registration: {}
app.finish_registration_error=Registration finish error

#sg
app.start_registration_request=Beginning registration request with user={}, ip={}
app.sg_request=Super Gluu request is {}
app.error_uniqueness=Error determining if device with uuid {0} is unique
app.duplicated_sg_removed=Duplicated SuperGluu device {} has been removed

#twilio
app.sms_sent_summary=Message "{}" sent to #{}; status {}

#password reset
app.pass_resetted=User {} has changed his password