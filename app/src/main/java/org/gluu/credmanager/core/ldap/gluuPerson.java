package org.gluu.credmanager.core.ldap;

import com.unboundid.ldap.sdk.ReadOnlyEntry;
import com.unboundid.ldap.sdk.persist.FilterUsage;
import com.unboundid.ldap.sdk.persist.LDAPEntryField;
import com.unboundid.ldap.sdk.persist.LDAPField;
import com.unboundid.ldap.sdk.persist.LDAPObject;

/**
 * This class provides an implementation of an object that can be used to
 * represent gluuPerson objects in the directory.
 * It was generated by the generate-source-from-schema tool provided with the
 * UnboundID LDAP SDK for Java.  It may be customized as desired to better suit
 * your needs.
 */
@LDAPObject(structuralClass="gluuPerson",
        superiorClass="top")
public class gluuPerson {

    // The field to use to hold a read-only copy of the associated entry.
    @LDAPEntryField()
    private ReadOnlyEntry ldapEntry;

    // The field used for RDN attribute inum.
    @LDAPField(attribute="inum",
            objectClass="gluuPerson",
            inRDN=true,
            filterUsage= FilterUsage.ALWAYS_ALLOWED,
            requiredForEncode=true)
    private String[] inum;

    // The field used for optional attribute userPassword.
    @LDAPField(attribute="userPassword",
            objectClass="gluuPerson",
            filterUsage=FilterUsage.CONDITIONALLY_ALLOWED)
    private String[] userPassword;


    // The field used for optional attribute oxPreferredMethod.
    @LDAPField(attribute="oxPreferredMethod",
            objectClass="gluuPerson",
            filterUsage=FilterUsage.CONDITIONALLY_ALLOWED)
    private String[] oxPreferredMethod;


    // The field used for optional attribute oxPreferredMethod.
    @LDAPField(attribute="oxStrongAuthPolicy",
            objectClass="gluuPerson",
            filterUsage=FilterUsage.CONDITIONALLY_ALLOWED)
    private String[] oxStrongAuthPolicy;


    // The field used for optional attribute oxPreferredMethod.
    @LDAPField(attribute="oxTrustedDevicesInfo",
            objectClass="gluuPerson",
            filterUsage=FilterUsage.CONDITIONALLY_ALLOWED)
    private String[] oxTrustedDevicesInfo;

    public String getInum()
    {
        if ((inum == null) ||
                (inum.length == 0))
        {
            return null;
        }
        else
        {
            return inum[0];
        }
    }

    public String getPreferredMethod()
    {
        if ((oxPreferredMethod == null) ||
                (oxPreferredMethod.length == 0))
        {
            return null;
        }
        else
        {
            return oxPreferredMethod[0];
        }
    }

    public String getStrongAuthPolicy()
    {
        if ((oxStrongAuthPolicy == null) ||
                (oxStrongAuthPolicy.length == 0))
        {
            return null;
        }
        else
        {
            return oxStrongAuthPolicy[0];
        }
    }

    public String getTrustedDevicesInfo()
    {
        if ((oxTrustedDevicesInfo == null) ||
                (oxTrustedDevicesInfo.length == 0))
        {
            return null;
        }
        else
        {
            return oxTrustedDevicesInfo[0];
        }
    }

    /**
     * Sets the values for the field associated with the
     * userPassword attribute.
     *
     * @param  userPassword  The values for the field associated with the
     *            userPassword attribute.
     */
    public void setPassword(final String userPassword)
    {
        this.userPassword = new String[]{ userPassword };
    }

    public void setPreferredMethod(final String method)
    {
        this.oxPreferredMethod = new String[]{ method };
    }

    public void setTrustedDevices(String oxTrustedDevicesInfo) {
        this.oxTrustedDevicesInfo = new String[] { oxTrustedDevicesInfo };
    }

}
